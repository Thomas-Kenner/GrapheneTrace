@page "/admin/dashboard"
@rendermode InteractiveServer
@attribute [Microsoft.AspNetCore.Authorization.Authorize(Roles = "Admin")]
@using GrapheneTrace.Web.Models
@using GrapheneTrace.Web.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider
@inject DashboardService DashboardService
@inject NavigationManager Navigation

@*
    Admin Dashboard Page
    Author: SID:2412494
    Route: /admin/dashboard

    Purpose: Main dashboard for administrator users.

    Authorization: Restricted to Admin role only using [Authorize(Roles = "Admin")].
    Users without the Admin role will receive a 403 Forbidden and be redirected to /access-denied.

    Current Implementation: Simple placeholder for testing authentication flow.
    Production TODO: Add admin-specific features (user management, system settings, etc.)
*@

<div class="admin-container">
    <!-- Header/Navigation -->
    <div class="admin-header">
        <div class="header-left">
            <span class="header-brand">Admin Dashboard</span>
        </div>

        <div class="nav-tabs">
            <button class="nav-tab active">Dashboard</button>
            <button class="nav-tab" @onclick="GoToUsers">Users</button>
            <button class="nav-tab" @onclick="GoToSettings">Settings</button>
            <button class="nav-tab">Support</button>
        </div>

        <div class="header-right">
            <input type="text" class="search-input" placeholder="Search..." />
            <div class="user-avatar"></div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="admin-content">
        <!-- Welcome Section with User Info -->
        <div style="background: white; border: 1px solid #e5e7eb; border-radius: 0.5rem; padding: 1.5rem; margin-bottom: 2rem;">
            <p style="margin-bottom: 0.5rem;">
                <strong>Welcome, @userName!</strong>
            </p>
            <p style="color: #6b7280; margin-bottom: 0.5rem;">
                Role: <strong>Administrator</strong>
            </p>
            <p style="color: #6b7280;">
                You have access to all system features and settings.
            </p>
        </div>

        <!-- Overview Section -->
        <h2 class="section-title">Overview</h2>

        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-header">
                    <h3>Total Users</h3>
                    <div class="stat-dot" style="background-color: #000;"></div>
                </div>
                <div class="stat-value">@stats.TotalUsers</div>
            </div>

            <div class="stat-card">
                <div class="stat-header">
                    <h3>Clinicians</h3>
                    <div class="stat-dot" style="background-color: #10b981;"></div>
                </div>
                <div class="stat-value">@stats.Clinicians</div>
            </div>

            <div class="stat-card">
                <div class="stat-header">
                    <h3>Patients</h3>
                    <div class="stat-dot" style="background-color: #3b82f6;"></div>
                </div>
                <div class="stat-value">@stats.Patients</div>
            </div>

            <div class="stat-card">
                <div class="stat-header">
                    <h3>Pending Requests</h3>
                    <div class="stat-dot" style="background-color: #f59e0b;"></div>
                </div>
                <div class="stat-value">N/A</div>
            </div>
        </div>

        <!-- Charts and Activity Section -->
        <div class="charts-section">
            <div class="chart-card">
                <div class="chart-header">
                    <h3>New Users (Last 30 Days)</h3>
                    <select class="chart-dropdown">
                        <option>30 days</option>
                        <option>60 days</option>
                        <option>90 days</option>
                    </select>
                </div>
                <div class="chart-placeholder">
                    <svg viewBox="0 0 500 200" class="chart-svg">
                        <defs>
                            <linearGradient id="chartGradient" x1="0%" y1="0%" x2="0%" y2="100%">
                                <stop offset="0%" style="stop-color:#3b82f6;stop-opacity:0.3" />
                                <stop offset="100%" style="stop-color:#3b82f6;stop-opacity:0.05" />
                            </linearGradient>
                        </defs>
                        <polyline points="20,150 60,130 100,120 140,110 180,90 220,80 260,85 300,70 340,75 380,60 420,50 460,45"
                                  fill="none" stroke="#3b82f6" stroke-width="2" />
                        <polygon points="20,150 60,130 100,120 140,110 180,90 220,80 260,85 300,70 340,75 380,60 420,50 460,45 460,200 20,200"
                                 fill="url(#chartGradient)" />
                    </svg>
                </div>
            </div>

            <div class="activity-card">
                <h3>Recent Activity</h3>
                <div class="activity-list">
                    <div class="activity-item">
                        <div class="activity-text">
                            <p class="activity-main">Clinician Rachel Green added 3 patients</p>
                            <p class="activity-time">2h ago</p>
                        </div>
                    </div>
                    <div class="activity-item">
                        <div class="activity-text">
                            <p class="activity-main">Admin approved clinician request</p>
                            <p class="activity-time">5h ago</p>
                        </div>
                    </div>
                    <div class="activity-item">
                        <div class="activity-text">
                            <p class="activity-main">Patient Andrei updated threshold</p>
                            <p class="activity-time">yesterday</p>
                        </div>
                    </div>
                    <div class="activity-item">
                        <div class="activity-text">
                            <p class="activity-main">2 users invited</p>
                            <p class="activity-time">yesterday</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- System Alerts Section -->
        <div class="alerts-section">
            <h3>System Alerts</h3>
            <div class="alerts-list">
                <div class="alert-item">
                    <div class="alert-text">
                        <p>3 clinician requests awaiting approval</p>
                    </div>
                    <button class="alert-view-btn">View</button>
                </div>
                <div class="alert-item">
                    <div class="alert-text">
                        <p>2 inactive accounts over 30 days</p>
                    </div>
                    <button class="alert-view-btn">View</button>
                </div>
            </div>
        </div>

        <!-- Logout Section -->
        <div style="background: #f9fafb; border: 1px solid #e5e7eb; border-radius: 0.5rem; padding: 1.5rem; margin-top: 2rem;">
            <form method="post" action="/account/logout">
                <button type="submit"
                        style="background: #dc2626; color: white; padding: 0.5rem 1rem; border: none; border-radius: 0.375rem; cursor: pointer; font-weight: 500;">
                    Logout
                </button>
            </form>
        </div>
    </div>

    <!-- Footer -->
    <div class="admin-footer">
        <p>Contact us · About · FAQ</p>
    </div>
</div>

@code {
    private string userName = "";
    private DashboardStats stats = new();

    /// <summary>
    /// Component initialization: loads user information from authentication state and dashboard stats.
    /// Author: SID:2412494
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        userName = authState.User.Identity?.Name ?? "Unknown";

        // Load dashboard statistics
        stats = await DashboardService.GetDashboardStatsAsync();

        // Role verification is handled by [Authorize(Roles = "Admin")] attribute
        // Non-admin users are automatically redirected to /access-denied
    }

    private void GoToUsers()
    {
        Navigation.NavigateTo("/admin/users");
    }

    private void GoToSettings()
    {
        Navigation.NavigateTo("/admin/settings");
    }
}
