@page "/access-denied"
@layout Layout.AuthLayout
@using GrapheneTrace.Web.Components.UI
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation

@*
    Access Denied Page
    Author: SID:2412494
    Route: /access-denied

    Purpose: Displays when a user attempts to access a page they don't have authorization for.

    Design: Shows a clear message explaining the access restriction and provides
    navigation options to return to appropriate dashboard or login page.

    Layout: AuthLayout
    Why: Minimal layout focuses user on the authorization issue without distractions.
*@

<link rel="stylesheet" href="css/auth.css" />

<div class="auth-container">
    <Card>
        <CardHeader>
            <h1 class="card-title" style="color: #dc2626;">Access Denied</h1>
            <p class="card-description">You don't have permission to access this page</p>
        </CardHeader>

        <CardContent>
            <div style="padding: 1rem; background: #fef2f2; border: 1px solid #fee2e2; border-radius: 0.5rem; margin-bottom: 1rem;">
                <p style="color: #991b1b; margin: 0;">
                    <strong>403 Forbidden</strong>
                </p>
                <p style="color: #991b1b; margin-top: 0.5rem; margin-bottom: 0;">
                    The page you're trying to access requires different permissions than your account has.
                </p>
            </div>

            @if (isAuthenticated)
            {
                <p style="color: #6b7280; margin-bottom: 1rem;">
                    You are currently logged in as <strong>@userName</strong> with <strong>@userRole</strong> role.
                </p>
                <p style="color: #6b7280;">
                    If you believe this is an error, please contact your system administrator.
                </p>
            }
            else
            {
                <p style="color: #6b7280;">
                    You may need to log in with an account that has the appropriate permissions.
                </p>
            }
        </CardContent>

        <CardFooter>
            <div style="width: 100%; display: flex; flex-direction: column; gap: 0.75rem;">
                @if (isAuthenticated)
                {
                    <Button FullWidth="true" OnClick="GoToDashboard">
                        Go to My Dashboard
                    </Button>
                }
                else
                {
                    <Button FullWidth="true" OnClick="GoToLogin">
                        Go to Login
                    </Button>
                }
                <button @onclick="GoBack"
                        style="width: 100%; padding: 0.625rem 1rem; background: transparent; border: 1px solid #d1d5db; color: #374151; border-radius: 0.375rem; cursor: pointer; font-weight: 500; transition: background-color 0.2s;">
                    Go Back
                </button>
            </div>
        </CardFooter>
    </Card>
</div>

@code {
    private bool isAuthenticated = false;
    private string userName = "";
    private string userRole = "";

    /// <summary>
    /// Component initialization: checks authentication state and user role.
    /// Author: SID:2412494
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isAuthenticated = user.Identity?.IsAuthenticated ?? false;

        if (isAuthenticated)
        {
            userName = user.Identity?.Name ?? "Unknown";

            // Get user's role
            if (user.IsInRole("Admin"))
                userRole = "Admin";
            else if (user.IsInRole("Clinician"))
                userRole = "Clinician";
            else if (user.IsInRole("Patient"))
                userRole = "Patient";
            else
                userRole = "Unknown";
        }
    }

    /// <summary>
    /// Navigates user to their appropriate dashboard based on role.
    /// Author: SID:2412494
    /// </summary>
    private void GoToDashboard()
    {
        var dashboardPath = userRole.ToLower() switch
        {
            "admin" => "/admin/dashboard",
            "clinician" => "/clinician/dashboard",
            "patient" => "/patient/dashboard",
            _ => "/login"
        };

        Navigation.NavigateTo(dashboardPath);
    }

    /// <summary>
    /// Navigates to login page.
    /// Author: SID:2412494
    /// </summary>
    private void GoToLogin()
    {
        Navigation.NavigateTo("/login");
    }

    /// <summary>
    /// Goes back to previous page.
    /// Author: SID:2412494
    /// </summary>
    private void GoBack()
    {
        Navigation.NavigateTo("/");
    }
}
